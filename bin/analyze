#!/bin/env python
from __future__ import print_function
import ROOT
import time
import os
from datetime import datetime

TODAY = datetime.now().timetuple()
ROOT.PyConfig.IgnoreCommandLineOptions = True
ROOT.gROOT.SetBatch(1)
ROOT.TH1.SetDefaultSumw2(True)
separator='=' * 80

def create_cli_parser():
    from argparse import ArgumentParser
    from importlib import import_module
    import glob
    def import_analyzer(analyzer_name):
        module=None
        try:
            module=import_module("cmsl1t.analyzers."+str(analyzer_name))
        except ImportError as e:
            ArgumentParser.error("Cannot find module, '{}', from the analyzers directory".format(analyzer_name))
        return module

    parser=ArgumentParser()
    parser.add_argument("-o","--out-dir")
    parser.add_argument("-c","--config",help="YAML style config file",type=str) #,required=True)
    parser.add_argument("-a","--analysis",help="Specify which analysis module to use. Must be relative to the analyzers directory",type=import_analyzer,required=True)
    parser.add_argument("-n","--n-events",help="Set how many events to run over",type=int,default=1000)

    # Temporarily add an option to handle the input data specification
    # Soon we expect this to be moved to the YAML config file
    parser.add_argument("-i","--inputs",required=True,type=glob.glob
                        ,help="""DEPRECATED: Specify the input files to run over.
                                Globbing is possible, but remember to escape things 
                                properly so it is handled by python and not BASH's
                                command-line expansion""")
    return parser

def get_unique_out_dir(outdir=None,revision=1):
    print(outdir,revision)
    if not outdir :
        outdir=os.path.join(
                "workspace",
                '{y}{m:02d}{d:02d}'.format(
                    y=TODAY.tm_year, m=TODAY.tm_mon, d=TODAY.tm_mday)
                )
    full_outdir=outdir+"-rev_{rev}".format(rev=revision)
    print(full_outdir)
    if os.path.isdir(full_outdir):
        return get_unique_out_dir(outdir,revision+1)
    return full_outdir

def parse_args(parser):
    args=parser.parse_args()
    args.out_dir=get_unique_out_dir(args.out_dir)
    return args

def run(args):
    section = [separator, '{0}', separator]
    section = '\n'.join(section)
    print(section.format("Starting CMS L1T Analsysis"))

    # Fetch the analyzer
    analyzer=args.analysis.Analyzer(args)

    # Open the data files
    print(section.format("Loading data"))
    from cmsl1t.playground.eventreader import EventReader
    reader = EventReader(args.inputs, events=args.n_events)
    is_ok=analyzer.prepare_for_events(reader)
    if is_ok is not True:
        return False

    print(section.format("Processing events"))
    # Fill the histograms from the tuples
    for entry, event in enumerate(reader):
        if entry%1000==0: print(entry,"of",args.n_events)
        is_ok=analyzer.process_event(entry,event)
        if is_ok is not True:
            break

    # Turn the histograms to plots
    print(section.format("Making plots"))
    is_ok=analyzer.make_plots()
    if is_ok is not True:
        return False

    # Finalize
    print(section.format("Finalizing things"))
    is_ok=analyzer.finalize()

    print('\n',separator,'\n')
    return is_ok

if __name__ == '__main__':
    parser=create_cli_parser()
    args=parse_args(parser)
    run(args)
