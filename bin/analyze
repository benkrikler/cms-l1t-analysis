#!/bin/env python
from __future__ import print_function
import ROOT
import time
import os
from datetime import datetime

TODAY = datetime.now().timetuple()
ROOT.PyConfig.IgnoreCommandLineOptions = True
ROOT.gROOT.SetBatch(1)
ROOT.TH1.SetDefaultSumw2(True)
separator='=' * 80

def create_cli_parser():
    from argparse import ArgumentParser
    from importlib import import_module
    import glob
    def import_analyzer(analyzer_name):
        module=None
        try:
            module=import_module("cmsl1t.analyzers."+str(analyzer_name))
        except ImportError as e:
            ArgumentParser.error("Cannot find module, '{}', from the analyzers directory".format(analyzer_name))
        return module

    parser=ArgumentParser()
    parser.add_argument("-o","--out-dir")
    parser.add_argument("-c","--config",help="YAML style config file",type=str,required=True)
    parser.add_argument("-a","--analysis",help="Specify which analysis module to use. Must be relative to the analyzers directory",type=import_analyzer,required=True)

    # Temporarily add an option to handle the input data specification
    # Soon we expect this to be moved to the YAML config file
    parser.add_argument("-i","--inputs",required=True,type=glob.glob
                        ,help="""DEPRECATED: Specify the input files to run over.
                                Globbing is possible, but remember to escape things 
                                properly so it is handled by python and not BASH's
                                command-line expansion""")
    return parser

def parse_args(parser):
    args=parser.parse_args()
    if not args.out_dir:
        args.out_dir= os.path.join(
            "workspace",
            '{y}{m:02d}{d:02d}'.format(
                y=TODAY.tm_year, m=TODAY.tm_mon, d=TODAY.tm_mday)
            )
    return args

def run(args):
    welcome = ['{separator}', 'Starting CMS L1T Analsysis',
               '{separator}', '', 'Work in progress']
    welcome = '\n'.join(welcome)
    print(welcome.format(separator=separator))

    # Open the data files
    from cmsl1t.playground.eventreader import EventReader
    reader = EventReader(FILES, events=nEvents)
    if getattr(args.analysis,prepare_for_events):
        args.analysis.prepare_for_events(reader)

    # Fill the histograms from the tuples
    for entry, event in enumerate(reader):
        args.analysis.process_event(entry,event)

    # Turn the histograms to plots
    args.analysis.make_plot()

    # Finalize
    if getattr(args.analysis,finalize):
        args.analysis.finalize()

    print('\n',separator,'\n')

if __name__ == '__main__':
    parser=create_cli_parser()
    args=parse_args(parser)
    run(args)
